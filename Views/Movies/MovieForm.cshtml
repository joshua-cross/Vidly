@model Vidly.ViewModels.MovieFormViewModel
@{
    ViewBag.Title = "MovieForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@*Checking if we're adding a new element or editing an existing element.*@
@try
{

    if (Model.Movies.Name.Equals("") || Model.Movies.Name.Equals(null))
    {
        <h2>Adding Movie</h2>
    } else
    {
        <h2>Editing Movie</h2>
    }
}

catch {

    <h2>Adding Movie</h2>
}

@* Using the using as the Html form is disposable, and using disposes at end.
   We're going to be saving to the Save action in the Movies Controller. 
    *@


@using (Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary()

    @*Edit text box for the name of the movie.*@
    <div class="form-group">
        @Html.LabelFor(m => m.Movies.Name)
        @Html.TextBoxFor(m => m.Movies.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movies.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movies.ReleaseDate)
        @Html.TextBoxFor(m => m.Movies.ReleaseDate, "{0: d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movies.ReleaseDate)
    </div>

    @*Creating a drop down menu from all the genres in the database.*@
    <div class="form-group">
        @Html.LabelFor(m => m.Movies.GenreId)
        @*Getting the genres from the Id and name of the genre.*@
        @Html.DropDownListFor(m => m.Movies.GenreId, new SelectList(Model.Genres, "Id", "Name"), "", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movies.GenreId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movies.Stock)
        @Html.TextBoxFor(m => m.Movies.Stock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movies.Stock)
    </div>

    @*Setting the date time for when the film was added to the database to now.*@
   @* @Model.Movies.DateAddedToDatabase = DateTime.Now; *@

    @*Hidden form for the Id.*@
    @Html.HiddenFor(m => m.Movies.Id)


    @Html.AntiForgeryToken()

    @*Adding a button to save the new/edited values.*@
    <button type="submit" class="btn btn-primary">Save</button>
}


@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}