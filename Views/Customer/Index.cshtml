@model IEnumerable<Vidly.Models.Customer>
@*
    Note: I've set the model for this view to IEnumerable<Customer>.
    This is a simple interface implemented by the list class. Since
    in this view we only want to iterate over this list, and we don't
    need any of the operations in the List class (eg Add, Remove, etc),
    it's better to use the IEnumerable interface, which allows use to
    iterate over the list. If in the future, we replace the List with a
    different data structure, as long as it is enumerable, our view code
    will remain unchanged.
*@

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model.Any()) {
    @*Creating a table that will hold all the movies from the Controller.*@
    <table class=“table table­‐bordered table­‐hover”>
        <tr>
            @*TR = row in case I forgot.*@
            <th>Customers</th>
            <th>Discount Rate</th>
        </tr>

        @{
            int i = 1;
        }

        @*For each movie that we have created in the Movies Controller for index.*@
        @foreach (var customer in Model)
        {
            //displaying each movie to the screen.
            <tr>
                <td>@Html.ActionLink(@customer.Name, "Detail", "Customer", new { id = i }, null)</td>
                <td>@customer.MembershipType.DiscountName</td>
            </tr>
            i++;
        }

    </table>
}
@*else we have got an empty array so we are going to print a message telling the user the lsit is empty.*@
else
{
    < p > There are currently no customers, come back again!</ p >
}


